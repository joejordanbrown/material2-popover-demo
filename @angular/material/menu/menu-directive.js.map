{"version":3,"sources":["../../../src/lib/menu/menu-directive.ts"],"names":[],"mappings":"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","file":"menu-directive.js","sourcesContent":["// TODO(kara): prevent-close functionality\r\n\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {MdMenuInvalidPositionX, MdMenuInvalidPositionY} from './menu-errors';\r\nimport {MdMenuItem} from './menu-item';\r\nimport {FocusKeyManager} from '../core/a11y/focus-key-manager';\r\nimport {MdMenuPanel} from './menu-panel';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {transformMenu, fadeInItems} from './menu-animations';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-menu, mat-menu',\r\n  host: {'role': 'menu'},\r\n  templateUrl: 'menu.html',\r\n  styleUrls: ['menu.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    transformMenu,\r\n    fadeInItems\r\n  ],\r\n  exportAs: 'mdMenu'\r\n})\r\nexport class MdMenu implements AfterContentInit, MdMenuPanel, OnDestroy {\r\n  private _keyManager: FocusKeyManager;\r\n\r\n  /** Subscription to tab events on the menu panel */\r\n  private _tabSubscription: Subscription;\r\n\r\n  /** Config object to be passed into the menu's ngClass */\r\n  _classList: any = {};\r\n\r\n  /** Position of the menu in the X axis. */\r\n  positionX: MenuPositionX = 'after';\r\n\r\n  /** Position of the menu in the Y axis. */\r\n  positionY: MenuPositionY = 'below';\r\n\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n  @ContentChildren(MdMenuItem) items: QueryList<MdMenuItem>;\r\n  @Input() overlapTrigger = true;\r\n\r\n  constructor(@Attribute('x-position') posX: MenuPositionX,\r\n              @Attribute('y-position') posY: MenuPositionY) {\r\n    if (posX) { this._setPositionX(posX); }\r\n    if (posY) { this._setPositionY(posY); }\r\n    this.setPositionClasses(this.positionX, this.positionY);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager(this.items).withWrap();\r\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => {\r\n      this._emitCloseEvent();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabSubscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * This method takes classes set on the host md-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set classList(classes: string) {\r\n    this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n      obj[className] = true;\r\n      return obj;\r\n    }, {});\r\n    this.setPositionClasses(this.positionX, this.positionY);\r\n  }\r\n\r\n  /** Event emitted when the menu is closed. */\r\n  @Output() close = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Focus the first item in the menu. This method is used by the menu trigger\r\n   * to focus the first item when the menu is opened by the ENTER key.\r\n   */\r\n  focusFirstItem() {\r\n    this._keyManager.setFirstItemActive();\r\n  }\r\n\r\n  /**\r\n   * This emits a close event to which the trigger is subscribed. When emitted, the\r\n   * trigger will close the menu.\r\n   */\r\n  _emitCloseEvent(): void {\r\n    this.close.emit();\r\n  }\r\n\r\n  private _setPositionX(pos: MenuPositionX): void {\r\n    if ( pos !== 'before' && pos !== 'after') {\r\n      throw new MdMenuInvalidPositionX();\r\n    }\r\n    this.positionX = pos;\r\n  }\r\n\r\n  private _setPositionY(pos: MenuPositionY): void {\r\n    if ( pos !== 'above' && pos !== 'below') {\r\n      throw new MdMenuInvalidPositionY();\r\n    }\r\n    this.positionY = pos;\r\n  }\r\n\r\n  /**\r\n   * It's necessary to set position-based classes to ensure the menu panel animation\r\n   * folds out from the correct direction.\r\n   */\r\n  setPositionClasses(posX: MenuPositionX, posY: MenuPositionY): void {\r\n    this._classList['md-menu-before'] = posX == 'before';\r\n    this._classList['md-menu-after'] = posX == 'after';\r\n    this._classList['md-menu-above'] = posY == 'above';\r\n    this._classList['md-menu-below'] = posY == 'below';\r\n  }\r\n\r\n}\r\n"]}