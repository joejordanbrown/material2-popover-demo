{"version":3,"sources":["../../../src/lib/menu/menu-item.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAC,MAAM,eAAe;AAGjF;;;GAGG;AAYH;IAGE,oBAAoB,SAAmB,EAAU,WAAuB;QAApD,cAAS,GAAT,SAAS,CAAU;QAAU,gBAAW,GAAX,WAAW,CAAY;IAAG,CAAC;IAE5E,0BAAK,GAAL;QACE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAMD,sBAAI,gCAAQ;QAJZ,uCAAuC;QACvC,yCAAyC;aAGzC,cAA0B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAClD,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,SAAS,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAC1E,CAAC;;;OAHiD;IAOlD,sBAAI,sCAAc;QAFlB,wDAAwD;aAExD,cAA+B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAChE,sBAAI,iCAAS;aAAb,cAAkB,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;;;OAAA;IAEtD,oCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;IACxC,CAAC;IAED,mCAAc,GAAd,UAAe,KAAY;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IArBD;QAAC,WAAW,CAAC,eAAe,CAAC;QAC5B,KAAK,EAAE;;8CAAA;IAOR;QAAC,WAAW,CAAC,oBAAoB,CAAC;;oDAAA;IA9BpC;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iCAAiC;YAC3C,IAAI,EAAE;gBACJ,MAAM,EAAE,UAAU;gBAClB,SAAS,EAAE,wBAAwB;gBACnC,iBAAiB,EAAE,WAAW;aAC/B;YACD,WAAW,EAAE,gBAAgB;YAC7B,QAAQ,EAAE,YAAY;SACvB,CAAC;;kBAAA;IAkCF,iBAAC;AAAD,CAjCA,AAiCC,IAAA","file":"menu-item.js","sourcesContent":["import {Component, ElementRef, Input, HostBinding, Renderer} from '@angular/core';\r\nimport {Focusable} from '../core/a11y/focus-key-manager';\r\n\r\n/**\r\n * This directive is intended to be used inside an md-menu tag.\r\n * It exists mostly to set the role attribute.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[md-menu-item], [mat-menu-item]',\r\n  host: {\r\n    'role': 'menuitem',\r\n    '(click)': '_checkDisabled($event)',\r\n    '[attr.tabindex]': '_tabindex'\r\n  },\r\n  templateUrl: 'menu-item.html',\r\n  exportAs: 'mdMenuItem'\r\n})\r\nexport class MdMenuItem implements Focusable {\r\n  _disabled: boolean;\r\n\r\n  constructor(private _renderer: Renderer, private _elementRef: ElementRef) {}\r\n\r\n  focus(): void {\r\n    this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus');\r\n  }\r\n\r\n  // this is necessary to support anchors\r\n  /** Whether the menu item is disabled. */\r\n  @HostBinding('attr.disabled')\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    this._disabled = (value === false || value === undefined) ? null : true;\r\n  }\r\n\r\n  /** Sets the aria-disabled property on the menu item. */\r\n  @HostBinding('attr.aria-disabled')\r\n  get isAriaDisabled(): string { return String(!!this.disabled); }\r\n  get _tabindex() { return this.disabled ? '-1' : '0'; }\r\n\r\n  _getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  _checkDisabled(event: Event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\n"]}