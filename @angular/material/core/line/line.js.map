{"version":3,"sources":["../../../src/lib/core/line/line.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EACH,QAAQ,EACR,SAAS,EAIZ,MAAM,eAAe;OACf,EAAC,mBAAmB,EAAC,MAAM,gCAAgC;AAGlE;;;;GAIG;AAEH;IAAA;IAAqB,CAAC;IADtB;QAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,uBAAuB,EAAE,CAAC;;cAAA;IAC5B,aAAC;AAAD,CAArB,AAAsB,IAAA;AAEtB;;;GAGG;AACH;IACE,sBAAoB,MAAyB,EAAU,SAAmB,EACtD,QAAoB;QAF1C,iBA6BC;QA5BqB,WAAM,GAAN,MAAM,CAAmB;QAAU,cAAS,GAAT,SAAS,CAAU;QACtD,aAAQ,GAAR,QAAQ,CAAY;QACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;YAC5B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,oCAAa,GAArB,UAAsB,KAAa;QACjC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,QAAM,KAAK,UAAO,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAEO,oCAAa,GAArB;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAEO,gCAAS,GAAjB,UAAkB,SAAiB,EAAE,IAAa;QAChD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/E,CAAC;IAEH,mBAAC;AAAD,CA7BA,AA6BC,IAAA;AAOD;IAAA;IAA4B,CAAC;IAL7B;QAAC,QAAQ,CAAC;YACR,OAAO,EAAE,CAAC,mBAAmB,CAAC;YAC9B,OAAO,EAAE,CAAC,MAAM,EAAE,mBAAmB,CAAC;YACtC,YAAY,EAAE,CAAC,MAAM,CAAC;SACvB,CAAC;;oBAAA;IAC0B,mBAAC;AAAD,CAA5B,AAA6B,IAAA","file":"line.js","sourcesContent":["import {\r\n    NgModule,\r\n    Directive,\r\n    Renderer,\r\n    ElementRef,\r\n    QueryList\r\n} from '@angular/core';\r\nimport {CompatibilityModule} from '../compatibility/compatibility';\r\n\r\n\r\n/**\r\n * Shared directive to count lines inside a text area, such as a list item.\r\n * Line elements can be extracted with a @ContentChildren(MdLine) query, then\r\n * counted by checking the query list's length.\r\n */\r\n@Directive({ selector: '[md-line], [mat-line]' })\r\nexport class MdLine {}\r\n\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n */\r\nexport class MdLineSetter {\r\n  constructor(private _lines: QueryList<MdLine>, private _renderer: Renderer,\r\n              private _element: ElementRef) {\r\n    this._setLineClass(this._lines.length);\r\n\r\n    this._lines.changes.subscribe(() => {\r\n      this._setLineClass(this._lines.length);\r\n    });\r\n  }\r\n\r\n  private _setLineClass(count: number): void {\r\n    this._resetClasses();\r\n    if (count === 2 || count === 3) {\r\n      this._setClass(`md-${count}-line`, true);\r\n    } else if (count > 3) {\r\n      this._setClass(`md-multi-line`, true);\r\n    }\r\n  }\r\n\r\n  private _resetClasses(): void {\r\n    this._setClass('md-2-line', false);\r\n    this._setClass('md-3-line', false);\r\n    this._setClass('md-multi-line', false);\r\n  }\r\n\r\n  private _setClass(className: string, bool: boolean): void {\r\n    this._renderer.setElementClass(this._element.nativeElement, className, bool);\r\n  }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [CompatibilityModule],\r\n  exports: [MdLine, CompatibilityModule],\r\n  declarations: [MdLine],\r\n})\r\nexport class MdLineModule { }\r\n"]}