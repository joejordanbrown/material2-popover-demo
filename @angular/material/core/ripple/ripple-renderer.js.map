{"version":3,"sources":["../../../src/lib/core/ripple/ripple-renderer.ts"],"names":[],"mappings":"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","file":"ripple-renderer.js","sourcesContent":["import {\r\n  ElementRef,\r\n  NgZone,\r\n} from '@angular/core';\r\n\r\n/** @docs-private */\r\nexport enum ForegroundRippleState {\r\n  NEW,\r\n  EXPANDING,\r\n  FADING_OUT,\r\n}\r\n\r\n/**\r\n * Wrapper for a foreground ripple DOM element and its animation state.\r\n * @docs-private\r\n */\r\nexport class ForegroundRipple {\r\n  state = ForegroundRippleState.NEW;\r\n  constructor(public rippleElement: Element) {}\r\n}\r\n\r\nconst RIPPLE_SPEED_PX_PER_SECOND = 1000;\r\nconst MIN_RIPPLE_FILL_TIME_SECONDS = 0.1;\r\nconst MAX_RIPPLE_FILL_TIME_SECONDS = 0.3;\r\n\r\n/**\r\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\r\n */\r\nconst distanceToFurthestCorner = (x: number, y: number, rect: ClientRect) => {\r\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\r\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\r\n  return Math.sqrt(distX * distX + distY * distY);\r\n};\r\n\r\n/**\r\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\r\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\r\n * event handlers to be installed on the element that triggers ripple animations.\r\n * This will eventually become a custom renderer once Angular support exists.\r\n * @docs-private\r\n */\r\nexport class RippleRenderer {\r\n  private _backgroundDiv: HTMLElement;\r\n  private _rippleElement: HTMLElement;\r\n  private _triggerElement: HTMLElement;\r\n  _opacity: string;\r\n\r\n  constructor(_elementRef: ElementRef,\r\n              private _eventHandlers: Map<string, (e: Event) => void>,\r\n              private _ngZone: NgZone) {\r\n    this._rippleElement = _elementRef.nativeElement;\r\n    // The background div is created in createBackgroundIfNeeded when the ripple becomes enabled.\r\n    // This avoids creating unneeded divs when the ripple is always disabled.\r\n    this._backgroundDiv = null;\r\n  }\r\n\r\n  /** Creates the div for the ripple background, if it doesn't already exist. */\r\n  createBackgroundIfNeeded() {\r\n    if (!this._backgroundDiv) {\r\n      this._backgroundDiv = document.createElement('div');\r\n      this._backgroundDiv.classList.add('md-ripple-background');\r\n      this._rippleElement.appendChild(this._backgroundDiv);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Installs event handlers on the given trigger element, and removes event handlers from the\r\n   * previous trigger if needed.\r\n   *\r\n   * @param newTrigger New trigger to which to attach the ripple handlers.\r\n   */\r\n  setTriggerElement(newTrigger: HTMLElement) {\r\n    if (this._triggerElement !== newTrigger) {\r\n      if (this._triggerElement) {\r\n        this._eventHandlers.forEach((eventHandler, eventName) => {\r\n          this._triggerElement.removeEventListener(eventName, eventHandler);\r\n        });\r\n      }\r\n      this._triggerElement = newTrigger;\r\n      if (this._triggerElement) {\r\n        this._eventHandlers.forEach((eventHandler, eventName) => {\r\n          this._triggerElement.addEventListener(eventName, eventHandler);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Installs event handlers on the host element of the md-ripple directive. */\r\n  setTriggerElementToHost() {\r\n    this.setTriggerElement(this._rippleElement);\r\n  }\r\n\r\n  /** Removes event handlers from the current trigger element if needed. */\r\n  clearTriggerElement() {\r\n    this.setTriggerElement(null);\r\n  }\r\n\r\n  /**\r\n   * Creates a foreground ripple and sets its animation to expand and fade in from the position\r\n   * given by rippleOriginLeft and rippleOriginTop (or from the center of the <md-ripple>\r\n   * bounding rect if centered is true).\r\n   *\r\n   * @param rippleOriginLeft Left origin of the ripple.\r\n   * @param rippleOriginTop Top origin of the ripple.\r\n   * @param color Ripple color.\r\n   * @param centered Whether the ripple should be centered.\r\n   * @param radius Radius of the ripple.\r\n   * @param speedFactor Speed at which the ripple expands towards the edges.\r\n   * @param transitionEndCallback Callback to be triggered when the ripple transition is done.\r\n   */\r\n  createForegroundRipple(\r\n      rippleOriginLeft: number,\r\n      rippleOriginTop: number,\r\n      color: string,\r\n      centered: boolean,\r\n      radius: number,\r\n      speedFactor: number,\r\n      transitionEndCallback: (r: ForegroundRipple, e: TransitionEvent) => void) {\r\n    const parentRect = this._rippleElement.getBoundingClientRect();\r\n    // Create a foreground ripple div with the size and position of the fully expanded ripple.\r\n    // When the div is created, it's given a transform style that causes the ripple to be displayed\r\n    // small and centered on the event location (or the center of the bounding rect if the centered\r\n    // argument is true). Removing that transform causes the ripple to animate to its natural size.\r\n    const startX = centered ? (parentRect.left + parentRect.width / 2) : rippleOriginLeft;\r\n    const startY = centered ? (parentRect.top + parentRect.height / 2) : rippleOriginTop;\r\n    const offsetX = startX - parentRect.left;\r\n    const offsetY = startY - parentRect.top;\r\n    const maxRadius = radius > 0 ? radius : distanceToFurthestCorner(startX, startY, parentRect);\r\n\r\n    const rippleDiv = document.createElement('div');\r\n    this._rippleElement.appendChild(rippleDiv);\r\n    rippleDiv.classList.add('md-ripple-foreground');\r\n    rippleDiv.style.left = `${offsetX - maxRadius}px`;\r\n    rippleDiv.style.top = `${offsetY - maxRadius}px`;\r\n    rippleDiv.style.width = `${2 * maxRadius}px`;\r\n    rippleDiv.style.height = rippleDiv.style.width;\r\n    // If color input is not set, this will default to the background color defined in CSS.\r\n    rippleDiv.style.backgroundColor = color;\r\n    // Start the ripple tiny.\r\n    rippleDiv.style.transform = `scale(0.001)`;\r\n\r\n    const fadeInSeconds = (1 / (speedFactor || 1)) * Math.max(\r\n        MIN_RIPPLE_FILL_TIME_SECONDS,\r\n        Math.min(MAX_RIPPLE_FILL_TIME_SECONDS, maxRadius / RIPPLE_SPEED_PX_PER_SECOND));\r\n    rippleDiv.style.transitionDuration = `${fadeInSeconds}s`;\r\n\r\n    // https://timtaubert.de/blog/2012/09/css-transitions-for-dynamically-created-dom-elements/\r\n    // Store the opacity to prevent this line as being seen as a no-op by optimizers.\r\n    this._opacity = window.getComputedStyle(rippleDiv).opacity;\r\n\r\n    rippleDiv.classList.add('md-ripple-fade-in');\r\n    // Clearing the transform property causes the ripple to animate to its full size.\r\n    rippleDiv.style.transform = '';\r\n    const ripple = new ForegroundRipple(rippleDiv);\r\n    ripple.state = ForegroundRippleState.EXPANDING;\r\n\r\n    rippleDiv.addEventListener('transitionend',\r\n        (event: TransitionEvent) => transitionEndCallback(ripple, event));\r\n    // Ensure that ripples are always removed, even when transitionend doesn't fire.\r\n    // Run this outside the Angular zone because there's nothing that Angular cares about.\r\n    // If it were to run inside the Angular zone, every test that used ripples would have to be\r\n    // either async or fakeAsync.\r\n    this._ngZone.runOutsideAngular(() => {\r\n      // The ripple lasts a time equal to the sum of fade-in, transform,\r\n      // and fade-out (3 * fade-in time).\r\n      let rippleDuration =  fadeInSeconds * 3 * 1000;\r\n      setTimeout(() => this.removeRippleFromDom(ripple.rippleElement), rippleDuration);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fades out a foreground ripple after it has fully expanded and faded in.\r\n   * @param ripple Ripple to be faded out.\r\n   */\r\n  fadeOutForegroundRipple(ripple: Element) {\r\n    ripple.classList.remove('md-ripple-fade-in');\r\n    ripple.classList.add('md-ripple-fade-out');\r\n  }\r\n\r\n  /**\r\n   * Removes a foreground ripple from the DOM after it has faded out.\r\n   * @param ripple Ripple to be removed from the DOM.\r\n   */\r\n  removeRippleFromDom(ripple: Element) {\r\n    if (ripple && ripple.parentElement) {\r\n      ripple.parentElement.removeChild(ripple);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fades in the ripple background.\r\n   * @param color New background color for the ripple.\r\n   */\r\n  fadeInRippleBackground(color: string) {\r\n    this._backgroundDiv.classList.add('md-ripple-active');\r\n    // If color is not set, this will default to the background color defined in CSS.\r\n    this._backgroundDiv.style.backgroundColor = color;\r\n  }\r\n\r\n  /** Fades out the ripple background. */\r\n  fadeOutRippleBackground() {\r\n    if (this._backgroundDiv) {\r\n      this._backgroundDiv.classList.remove('md-ripple-active');\r\n    }\r\n  }\r\n}\r\n"]}