{"version":3,"sources":["../../../src/lib/core/a11y/focus-key-manager.ts"],"names":[],"mappings":";;;;;OAEO,EAAC,cAAc,EAAa,MAAM,oBAAoB;AAW7D;IAAqC,mCAAyB;IAE5D,yBAAY,KAA2B;QACrC,kBAAM,KAAK,CAAC,CAAC;IACf,CAAC;IAED;;;OAGG;IACH,uCAAa,GAAb,UAAc,KAAa;QACzB,gBAAK,CAAC,aAAa,YAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAEH,sBAAC;AAAD,CAfA,AAeC,CAfoC,cAAc,GAelD","file":"focus-key-manager.js","sourcesContent":["\r\nimport {QueryList} from '@angular/core';\r\nimport {ListKeyManager, CanDisable} from './list-key-manager';\r\n\r\n/**\r\n * This is the interface for focusable items (used by the FocusKeyManager).\r\n * Each item must know how to focus itself and whether or not it is currently disabled.\r\n */\r\nexport interface Focusable extends CanDisable {\r\n  focus(): void;\r\n}\r\n\r\n\r\nexport class FocusKeyManager extends ListKeyManager<Focusable> {\r\n\r\n  constructor(items: QueryList<Focusable>) {\r\n    super(items);\r\n  }\r\n\r\n  /**\r\n   * This method sets the active item to the item at the specified index.\r\n   * It also adds focuses the newly active item.\r\n   */\r\n  setActiveItem(index: number): void {\r\n    super.setActiveItem(index);\r\n    this.activeItem.focus();\r\n  }\r\n\r\n}\r\n"]}