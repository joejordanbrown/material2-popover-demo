{"version":3,"sources":["../../../src/lib/core/platform/platform.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,UAAU,EAAC,MAAM,eAAe;AAIxC,4EAA4E;AAC5E,mDAAmD;AACnD,IAAM,kBAAkB,GAAG,OAAM,CAAC,MAAM,CAAC,KAAK,WAAW;IACrD,CAAC,MAAM,CAAC,IAAI,IAAK,MAAM,CAAC,IAAY,CAAC,eAAe,CAAC;IACrD,CAAC,OAAM,CAAC,IAAI,CAAC,KAAK,WAAW,IAAK,IAAY,CAAC,eAAe,CAAC,CAAC;AAEpE;;;;GAIG;AAEH;IAAA;QACE,qBAAqB;QACrB,SAAI,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC3C,YAAO,GAAG,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAEtD,wFAAwF;QACxF,UAAK,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAExF,+EAA+E;QAC/E,6EAA6E;QAC7E,WAAM,GAAG,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAEhG,kCAAkC;QAClC,QAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QAEvE,yFAAyF;QACzF,iFAAiF;QACjF,iFAAiF;QACjF,iDAAiD;QACjD,YAAO,GAAG,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAE3D,oFAAoF;QACpF,YAAO,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAClE,CAAC;IAxBD;QAAC,UAAU,EAAE;;gBAAA;IAwBb,eAAC;AAAD,CAvBA,AAuBC,IAAA","file":"platform.js","sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\ndeclare const window: any;\r\n\r\n// Whether the current platform supports the V8 Break Iterator. The V8 check\r\n// is necessary to detect all Blink based browsers.\r\nconst hasV8BreakIterator = typeof(window) !== 'undefined' ?\r\n    (window.Intl && (window.Intl as any).v8BreakIterator) :\r\n    (typeof(Intl) !== 'undefined' && (Intl as any).v8BreakIterator);\r\n\r\n/**\r\n * Service to detect the current platform by comparing the userAgent strings and\r\n * checking browser-specific global properties.\r\n * @docs-private\r\n */\r\n@Injectable()\r\nexport class Platform {\r\n  /** Layout Engines */\r\n  EDGE = /(edge)/i.test(navigator.userAgent);\r\n  TRIDENT = /(msie|trident)/i.test(navigator.userAgent);\r\n\r\n  // EdgeHTML and Trident mock Blink specific things and need to excluded from this check.\r\n  BLINK = !!(window.chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT;\r\n\r\n  // Webkit is part of the userAgent in EdgeHTML Blink and Trident, so we need to\r\n  // ensure that Webkit runs standalone and is not use as another engines base.\r\n  WEBKIT = /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\r\n\r\n  /** Browsers and Platform Types */\r\n  IOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n\r\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\r\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\r\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\r\n  // instead of having an unstable check for Gecko.\r\n  FIREFOX = /(firefox|minefield)/i.test(navigator.userAgent);\r\n\r\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\r\n  ANDROID = /android/i.test(navigator.userAgent) && !this.TRIDENT;\r\n}\r\n"]}