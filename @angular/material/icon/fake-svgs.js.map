{"version":3,"sources":["../../../src/lib/icon/fake-svgs.ts"],"names":[],"mappings":"OAAO,EACL,QAAQ,EACR,eAAe,EAAC,MAAM,eAAe;AAEvC;;;GAGG;AACH,IAAM,SAAS,GAAG,CAAC;IACjB,IAAM,IAAI,GAAG,IAAI,GAAG,EAAkB,CAAC;IACvC,IAAI,CAAC,GAAG,CAAC,SAAS,EACd,oCAAoC,CAAC,CAAC;IAE1C,IAAI,CAAC,GAAG,CAAC,SAAS,EACd,oCAAoC,CAAC,CAAC;IAE1C,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,+KAO1B,CAAC,CAAC;IAEH,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,oLAO1B,CAAC,CAAC;IAEH,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,wMAOzB,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC;AACd,CAAC,CAAC,EAAE,CAAC;AAEL;;;GAGG;AACH,uCAAuC,GAAW;IAChD,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,IAAI,QAAQ,CAAC,IAAI,eAAe,CAAC;YACtC,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;SACzB,CAAC,CAAC,CAAC;IACN,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,IAAI,QAAQ,CAAC,IAAI,eAAe,CAAC,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;AACH,CAAC","file":"fake-svgs.js","sourcesContent":["import {\r\n  Response,\r\n  ResponseOptions} from '@angular/http';\r\n\r\n/**\r\n * Fake URLs and associated SVG documents used by tests.\r\n * @docs-private\r\n */\r\nconst FAKE_SVGS = (() => {\r\n  const svgs = new Map<string, string>();\r\n  svgs.set('cat.svg',\r\n      '<svg><path id=\"meow\"></path></svg>');\r\n\r\n  svgs.set('dog.svg',\r\n      '<svg><path id=\"woof\"></path></svg>');\r\n\r\n  svgs.set('farm-set-1.svg', `\r\n      <svg>\r\n        <defs>\r\n          <g id=\"pig\"><path id=\"oink\"></path></g>\r\n          <g id=\"cow\"><path id=\"moo\"></path></g>\r\n        </defs>\r\n      </svg>\r\n  `);\r\n\r\n  svgs.set('farm-set-2.svg', `\r\n      <svg>\r\n        <defs>\r\n          <g id=\"cow\"><path id=\"moo moo\"></path></g>\r\n          <g id=\"sheep\"><path id=\"baa\"></path></g>\r\n        </defs>\r\n      </svg>\r\n  `);\r\n\r\n  svgs.set('arrow-set.svg', `\r\n      <svg>\r\n        <defs>\r\n          <svg id=\"left-arrow\"><path id=\"left\"></path></svg>\r\n          <svg id=\"right-arrow\"><path id=\"right\"></path></svg>\r\n        </defs>\r\n      </svg>\r\n  `);\r\n\r\n  return svgs;\r\n})();\r\n\r\n/**\r\n * Returns an HTTP response for a fake SVG URL.\r\n * @docs-private\r\n */\r\nexport function getFakeSvgHttpResponse(url: string) {\r\n  if (FAKE_SVGS.has(url)) {\r\n    return new Response(new ResponseOptions({\r\n      status: 200,\r\n      body: FAKE_SVGS.get(url),\r\n    }));\r\n  } else {\r\n    return new Response(new ResponseOptions({status: 404}));\r\n  }\r\n}\r\n"]}