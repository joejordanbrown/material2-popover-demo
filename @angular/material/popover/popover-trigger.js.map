{"version":3,"sources":["../../../src/lib/popover/popover-trigger.ts"],"names":[],"mappings":"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","file":"popover-trigger.js","sourcesContent":["import {\r\n    AfterViewInit,\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    OnDestroy,\r\n    Optional,\r\n    Output,\r\n    Renderer,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport {MdPopoverPanel} from './popover-panel';\r\nimport {MdPopoverMissingError} from './popover-errors';\r\nimport {\r\n    isFakeMousedownFromScreenReader,\r\n    Dir,\r\n    LayoutDirection,\r\n    Overlay,\r\n    OverlayState,\r\n    OverlayRef,\r\n    TemplatePortal,\r\n    ConnectedPositionStrategy,\r\n    HorizontalConnectionPos,\r\n    VerticalConnectionPos,\r\n} from '../core';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {PopoverPositionX, PopoverPositionY} from './popover-positions';\r\n\r\n/**\r\n * This directive is intended to be used in conjunction with an md-popover tag.  It is\r\n * responsible for toggling the display of the provided popover instance.\r\n */\r\n@Directive({\r\n  selector: '[md-popover-trigger-for], [mat-popover-trigger-for], [mdPopoverTriggerFor]',\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    // '(click)': 'togglePopover()',\r\n    // '(mouseenter)': 'openPopover()',\r\n    // '(mouseleave)': 'closePopover()',\r\n  },\r\n  exportAs: 'mdPopoverTrigger'\r\n})\r\nexport class MdPopoverTrigger implements AfterViewInit, OnDestroy {\r\n  private _portal: TemplatePortal;\r\n  private _overlayRef: OverlayRef;\r\n  private _popoverOpen: boolean = false;\r\n  private _backdropSubscription: Subscription;\r\n  private _positionSubscription: Subscription;\r\n\r\n  // tracking input type is necessary so it's possible to only auto-focus\r\n  // the first item of the list when the popover is opened via the keyboard\r\n  private _openedByMouse: boolean = false;\r\n\r\n  private _mouseoverTimmer: number;\r\n  private _popoverCloseDisabled = false;\r\n\r\n\r\n\r\n  /** @deprecated */\r\n  @Input('md-popover-trigger-for')\r\n  get _deprecatedPopoverTriggerFor(): MdPopoverPanel { return this.popover; }\r\n  set _deprecatedPopoverTriggerFor(v: MdPopoverPanel) { this.popover = v; }\r\n\r\n  /** References the popover instance that the trigger is associated with. */\r\n  @Input('mdPopoverTriggerFor') popover: MdPopoverPanel;\r\n\r\n\r\n  @HostListener('click') onClick() {\r\n    if (this.popover.mdPopoverTrigger == 'click') {\r\n      this.togglePopover();\r\n    }\r\n  }\r\n\r\n\r\n  @HostListener('mouseover') onMouseOver() {\r\n    if (this.popover.mdPopoverTrigger == 'hover') {\r\n      this._mouseoverTimmer = setTimeout(() => {\r\n        this.openPopover();\r\n      }, this.popover.mdPopoverDelay);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    if (this.popover.mdPopoverTrigger == 'hover') {\r\n      clearTimeout(this._mouseoverTimmer);\r\n      if (this._popoverOpen) {\r\n        setTimeout(() => {\r\n          if (!this.popover.closeDisabled) {\r\n            this.closePopover();\r\n          }\r\n        }, 200);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /** Event emitted when the associated popover is opened. */\r\n  @Output() onPopoverOpen = new EventEmitter<void>();\r\n\r\n  /** Event emitted when the associated popover is closed. */\r\n  @Output() onPopoverClose = new EventEmitter<void>();\r\n\r\n\r\n  constructor(private _overlay: Overlay, private _element: ElementRef,\r\n              private _viewContainerRef: ViewContainerRef, private _renderer: Renderer,\r\n              @Optional() private _dir: Dir) {}\r\n\r\n  ngAfterViewInit() {\r\n    this._checkPopover();\r\n    this.popover.close.subscribe(() => this.closePopover());\r\n  }\r\n\r\n  ngOnDestroy() { this.destroyPopover(); }\r\n\r\n  /** Whether the popover is open. */\r\n  get popoverOpen(): boolean { return this._popoverOpen; }\r\n\r\n  /** Toggles the popover between the open and closed states. */\r\n  togglePopover(): void {\r\n    return this._popoverOpen ? this.closePopover() : this.openPopover();\r\n  }\r\n\r\n\r\n  /** Opens the popover. */\r\n  openPopover(): void {\r\n    if (!this._popoverOpen) {\r\n      this._createOverlay();\r\n      this._overlayRef.attach(this._portal);\r\n      this._subscribeToBackdrop();\r\n      this._initPopover();\r\n    }\r\n  }\r\n\r\n  /** Closes the popover. */\r\n  closePopover(): void {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.detach();\r\n      this._backdropSubscription.unsubscribe();\r\n      this._resetPopover();\r\n    }\r\n  }\r\n\r\n  /** Removes the popover from the DOM. */\r\n  destroyPopover(): void {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n\r\n      this._cleanUpSubscriptions();\r\n    }\r\n  }\r\n\r\n  /** Focuses the popover trigger. */\r\n  focus() {\r\n    this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  get dir(): LayoutDirection {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * This method ensures that the popover closes when the overlay backdrop is clicked.\r\n   * We do not use first() here because doing so would not catch clicks from within\r\n   * the popover, and it would fail to unsubscribe properly. Instead, we unsubscribe\r\n   * explicitly when the popover is closed or destroyed.\r\n   */\r\n  private _subscribeToBackdrop(): void {\r\n    this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\r\n      this.closePopover();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method sets the popover state to open and focuses the first item if\r\n   * the popover was opened via the keyboard.\r\n   */\r\n  private _initPopover(): void {\r\n    this._setIsPopoverOpen(true);\r\n\r\n    // Should only set focus if opened via the keyboard, so keyboard users can\r\n    // can easily navigate popover items. According to spec, mouse users should not\r\n    // see the focus style.\r\n    if (!this._openedByMouse) {\r\n      this.popover.focusFirstItem();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method resets the popover when it's closed, most importantly restoring\r\n   * focus to the popover trigger if the popover was opened via the keyboard.\r\n   */\r\n  private _resetPopover(): void {\r\n    this._setIsPopoverOpen(false);\r\n\r\n    // Focus only needs to be reset to the host element if the popover was opened\r\n    // by the keyboard and manually shifted to the first popover item.\r\n    if (!this._openedByMouse) {\r\n      this.focus();\r\n    }\r\n    this._openedByMouse = false;\r\n  }\r\n\r\n  // set state rather than toggle to support triggers sharing a popover\r\n  private _setIsPopoverOpen(isOpen: boolean): void {\r\n    this._popoverOpen = isOpen;\r\n    this._popoverOpen ? this.onPopoverOpen.emit() : this.onPopoverClose.emit();\r\n  }\r\n\r\n  /**\r\n   *  This method checks that a valid instance of MdPopover has been passed into\r\n   *  mdPopoverTriggerFor. If not, an exception is thrown.\r\n   */\r\n  private _checkPopover() {\r\n    if (!this.popover) {\r\n      throw new MdPopoverMissingError();\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  This method creates the overlay from the provided popover's template and saves its\r\n   *  OverlayRef so that it can be attached to the DOM when openPopover is called.\r\n   */\r\n  private _createOverlay(): void {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.popover.templateRef, this._viewContainerRef);\r\n      const config = this._getOverlayConfig();\r\n      this._subscribeToPositions(config.positionStrategy as ConnectedPositionStrategy);\r\n      this._overlayRef = this._overlay.create(config);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\r\n   * @returns OverlayState\r\n   */\r\n  private _getOverlayConfig(): OverlayState {\r\n    const overlayState = new OverlayState();\r\n    overlayState.positionStrategy = this._getPosition()\r\n                                        .withDirection(this.dir);\r\n    if (this.popover.mdPopoverTrigger == 'click') {\r\n      overlayState.hasBackdrop = true;\r\n      overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\r\n    }\r\n    overlayState.direction = this.dir;\r\n    return overlayState;\r\n  }\r\n\r\n  /**\r\n   * Listens to changes in the position of the overlay and sets the correct classes\r\n   * on the popover based on the new position. This ensures the animation origin is always\r\n   * correct, even if a fallback position is used for the overlay.\r\n   */\r\n  private _subscribeToPositions(position: ConnectedPositionStrategy): void {\r\n    this._positionSubscription = position.onPositionChange.subscribe((change) => {\r\n      const posX: PopoverPositionX = change.connectionPair.originX === 'start' ? 'after' : 'before';\r\n      let posY: PopoverPositionY = change.connectionPair.originY === 'top' ? 'below' : 'above';\r\n\r\n      if (!this.popover.overlapTrigger) {\r\n        posY = posY === 'below' ? 'above' : 'below';\r\n      }\r\n\r\n      this.popover.setPositionClasses(posX, posY);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method builds the position strategy for the overlay, so the popover is properly connected\r\n   * to the trigger.\r\n   * @returns ConnectedPositionStrategy\r\n   */\r\n  private _getPosition(): ConnectedPositionStrategy  {\r\n    const [posX, fallbackX]: HorizontalConnectionPos[] =\r\n      this.popover.positionX === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    const [overlayY, fallbackOverlayY]: VerticalConnectionPos[] =\r\n      this.popover.positionY === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let originY = overlayY;\r\n    let fallbackOriginY = fallbackOverlayY;\r\n\r\n    if (!this.popover.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      fallbackOriginY = fallbackOverlayY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    return this._overlay.position()\r\n      .connectedTo(this._element,\r\n          {originX: posX, originY: originY}, {overlayX: posX, overlayY: overlayY})\r\n      .withFallbackPosition(\r\n          {originX: fallbackX, originY: originY},\r\n          {overlayX: fallbackX, overlayY: overlayY})\r\n      .withFallbackPosition(\r\n          {originX: posX, originY: fallbackOriginY},\r\n          {overlayX: posX, overlayY: fallbackOverlayY})\r\n      .withFallbackPosition(\r\n          {originX: fallbackX, originY: fallbackOriginY},\r\n          {overlayX: fallbackX, overlayY: fallbackOverlayY});\r\n  }\r\n\r\n  private _cleanUpSubscriptions(): void {\r\n    if (this._backdropSubscription) {\r\n      this._backdropSubscription.unsubscribe();\r\n    }\r\n    if (this._positionSubscription) {\r\n      this._positionSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  _handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      this._openedByMouse = true;\r\n    }\r\n  }\r\n\r\n}\r\n"]}