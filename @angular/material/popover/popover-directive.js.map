{"version":3,"sources":["../../../src/lib/popover/popover-directive.ts"],"names":[],"mappings":"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","file":"popover-directive.js","sourcesContent":["// TODO(kara): prevent-close functionality\r\n\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {PopoverPositionX, PopoverPositionY} from './popover-positions';\r\nimport {MdPopoverInvalidPositionX, MdPopoverInvalidPositionY} from './popover-errors';\r\n// import {FocusKeyManager} from '../core/a11y/focus-key-manager';\r\nimport {MdPopoverPanel} from './popover-panel';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {transformPopover, fadeInItems} from './popover-animations';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-popover, mat-popover',\r\n  host: {'role': 'dialog'},\r\n  templateUrl: 'popover.html',\r\n  styleUrls: ['popover.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    transformPopover,\r\n    fadeInItems\r\n  ],\r\n  exportAs: 'mdPopover'\r\n})\r\nexport class MdPopover implements AfterContentInit, MdPopoverPanel, OnDestroy {\r\n  // private _keyManager: FocusKeyManager;\r\n\r\n  /** Subscription to tab events on the popover panel */\r\n  private _tabSubscription: Subscription;\r\n\r\n  /** Config object to be passed into the popover's ngClass */\r\n  _classList: any = {};\r\n\r\n  /** Position of the popover in the X axis. */\r\n  positionX: PopoverPositionX = 'after';\r\n\r\n  /** Position of the popover in the Y axis. */\r\n  positionY: PopoverPositionY = 'below';\r\n\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n  //@ContentChildren(MdPopoverItem) items: QueryList<MdPopoverItem>;\r\n  @Input() overlapTrigger = true;\r\n\r\n  /** @NEW Custom Start */\r\n\r\n  closeDisabled = false;\r\n\r\n  /** Popover Trigger event */\r\n  @Input() mdPopoverTrigger = 'hover';\r\n\r\n  /** Popover placement */\r\n  @Input() mdPopoverPlacement = 'bottom';\r\n\r\n  /** Popover delay */\r\n  @Input() mdPopoverDelay = 300;\r\n\r\n\r\n  @HostListener('mouseover') onMouseOver() {\r\n    if (this.mdPopoverTrigger == 'hover') {\r\n      this.closeDisabled = true;\r\n      console.log('mouseover: md-popover');\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    if (this.mdPopoverTrigger == 'hover') {\r\n      this.closeDisabled = false;\r\n      this.close.emit();\r\n      console.log('mouseleave: md-popover');\r\n    }\r\n  }\r\n\r\n  /** @NEW Custom End */\r\n\r\n  constructor(@Attribute('x-position') posX: PopoverPositionX,\r\n              @Attribute('y-position') posY: PopoverPositionY) {\r\n    if (posX) { this._setPositionX(posX); }\r\n    if (posY) { this._setPositionY(posY); }\r\n    this.setPositionClasses(this.positionX, this.positionY);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    //this._keyManager = new FocusKeyManager(this.items).withWrap();\r\n    //this._tabSubscription = this._keyManager.tabOut.subscribe(() => {\r\n      //this._emitCloseEvent();\r\n    //});\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabSubscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * This method takes classes set on the host md-popover element and applies them on the\r\n   * popover template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing popover from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set classList(classes: string) {\r\n    this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n      obj[className] = true;\r\n      return obj;\r\n    }, {});\r\n    this.setPositionClasses(this.positionX, this.positionY);\r\n  }\r\n\r\n  /** Event emitted when the popover is closed. */\r\n  @Output() close = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Focus the first item in the popover. This method is used by the popover trigger\r\n   * to focus the first item when the popover is opened by the ENTER key.\r\n   */\r\n  focusFirstItem() {\r\n    //this._keyManager.setFirstItemActive();\r\n  }\r\n\r\n  /**\r\n   * This emits a close event to which the trigger is subscribed. When emitted, the\r\n   * trigger will close the popover.\r\n   */\r\n  _emitCloseEvent(): void {\r\n    this.close.emit();\r\n  }\r\n\r\n  private _setPositionX(pos: PopoverPositionX): void {\r\n    if ( pos !== 'before' && pos !== 'after') {\r\n      throw new MdPopoverInvalidPositionX();\r\n    }\r\n    this.positionX = pos;\r\n  }\r\n\r\n  private _setPositionY(pos: PopoverPositionY): void {\r\n    if ( pos !== 'above' && pos !== 'below') {\r\n      throw new MdPopoverInvalidPositionY();\r\n    }\r\n    this.positionY = pos;\r\n  }\r\n\r\n  /**\r\n   * It's necessary to set position-based classes to ensure the popover panel animation\r\n   * folds out from the correct direction.\r\n   */\r\n  setPositionClasses(posX: PopoverPositionX, posY: PopoverPositionY): void {\r\n    this._classList['md-popover-before'] = posX == 'before';\r\n    this._classList['md-popover-after'] = posX == 'after';\r\n    this._classList['md-popover-above'] = posY == 'above';\r\n    this._classList['md-popover-below'] = posY == 'below';\r\n  }\r\n\r\n}\r\n"]}