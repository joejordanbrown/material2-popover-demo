{"version":3,"sources":["../../../src/lib/select/select-animations.ts"],"names":[],"mappings":"OAAO,EACL,OAAO,EAEP,KAAK,EACL,KAAK,EACL,UAAU,EACV,OAAO,EACR,MAAM,eAAe;AAEtB;;;;;GAKG;AAEH;;;;GAIG;AACH,OAAO,IAAM,oBAAoB,GAA2B,OAAO,CAAC,sBAAsB,EAAE;IAC1F,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC;QAC1B,GAAG,EAAE,OAAO;QACZ,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,aAAa;KACzB,CAAC,CAAC;IACH,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC;QAC1B,GAAG,EAAE,OAAO;QACZ,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,aAAa;KACzB,CAAC,CAAC;IACH,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,wCAAwC,CAAC,CAAC;CACxE,CAAC,CAAC;AAEH;;;;;;;;GAQG;AACH,OAAO,IAAM,cAAc,GAA2B,OAAO,CAAC,gBAAgB,EAAE;IAC9E,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC;QACrB,OAAO,EAAE,CAAC;QACV,QAAQ,EAAE,mBAAmB;QAC7B,SAAS,EAAE,8BAA8B;KAC1C,CAAC,CAAC;IACH,UAAU,CAAC,WAAW,EAAE;QACtB,KAAK,CAAC;YACJ,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,gCAAgC;SAC5C,CAAC;QACF,OAAO,CAAC,wCAAwC,CAAC;KAClD,CAAC;IACF,UAAU,CAAC,WAAW,EAAE;QACtB,OAAO,CAAC,oBAAoB,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;KACnD,CAAC;CACH,CAAC,CAAC;AAEH;;;;GAIG;AACH,OAAO,IAAM,aAAa,GAA6B,OAAO,CAAC,eAAe,EAAE;IAC9E,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;IACrC,UAAU,CAAC,iBAAiB,EAAE;QAC5B,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC;QACnB,OAAO,CAAC,8CAA8C,CAAC;KACxD,CAAC;CACH,CAAC,CAAC","file":"select-animations.js","sourcesContent":["import {\r\n  animate,\r\n  AnimationEntryMetadata,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/core';\r\n\r\n/**\r\n * The following are all the animations for the md-select component, with each\r\n * const containing the metadata for one animation.\r\n *\r\n * The values below match the implementation of the AngularJS Material md-select animation.\r\n */\r\n\r\n/**\r\n * This animation shrinks the placeholder text to 75% of its normal size and translates\r\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\r\n * depending on the text direction of the application.\r\n */\r\nexport const transformPlaceholder: AnimationEntryMetadata = trigger('transformPlaceholder', [\r\n  state('floating-ltr', style({\r\n    top: '-22px',\r\n    left: '-2px',\r\n    transform: `scale(0.75)`\r\n  })),\r\n  state('floating-rtl', style({\r\n    top: '-22px',\r\n    left: '2px',\r\n    transform: `scale(0.75)`\r\n  })),\r\n  transition('* => *', animate(`400ms cubic-bezier(0.25, 0.8, 0.25, 1)`))\r\n]);\r\n\r\n/**\r\n * This animation transforms the select's overlay panel on and off the page.\r\n *\r\n * When the panel is attached to the DOM, it expands its width 32px, scales it up to\r\n * 100% on the Y axis, fades in its border, and translates slightly up and to the\r\n * side to ensure the option text correctly overlaps the trigger text.\r\n *\r\n * When the panel is removed from the DOM, it simply fades out linearly.\r\n */\r\nexport const transformPanel: AnimationEntryMetadata = trigger('transformPanel', [\r\n  state('showing', style({\r\n    opacity: 1,\r\n    minWidth: 'calc(100% + 32px)',\r\n    transform: `translate3d(0,0,0) scaleY(1)`\r\n  })),\r\n  transition('void => *', [\r\n    style({\r\n      opacity: 0,\r\n      minWidth: '100%',\r\n      transform: `translate3d(0, 0, 0) scaleY(0)`\r\n    }),\r\n    animate(`150ms cubic-bezier(0.25, 0.8, 0.25, 1)`)\r\n  ]),\r\n  transition('* => void', [\r\n    animate('250ms 100ms linear', style({opacity: 0}))\r\n  ])\r\n]);\r\n\r\n/**\r\n * This animation fades in the background color and text content of the\r\n * select's options. It is time delayed to occur 100ms after the overlay\r\n * panel has transformed in.\r\n */\r\nexport const fadeInContent: AnimationEntryMetadata  =  trigger('fadeInContent', [\r\n  state('showing', style({opacity: 1})),\r\n  transition('void => showing', [\r\n    style({opacity: 0}),\r\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\r\n  ])\r\n]);\r\n"]}